#!/bin/bash
#taskID=1
maxProcs=`ls -d ./proc* |wc -l`
maxTask=$1
procGB=1

echo "!!!The total number of processor is: "$maxProcs
echo "!!!The number of task is: "$maxTask

#for(( taskID = 0; taskID <= 9; taskID++))
#do
#	echo "task $taskID is begin!!!"	
#	for(( i = 0; i <= maxProcs; i++ ))
#	do
#		if(( taskID == i % maxTask ))
#		then
#			echo $i
#		fi
#	done
#done

#Gets the process of the task

prInTask=`expr $maxProcs / $maxTask`
lastTask=`expr $maxProcs % $maxTask`

echo "Number of processor per task: "$prInTask
echo "Number of processor in last task: "$lastTask

# bsub jobs

for(( taskID = 0; taskID < maxTask-1; taskID++))
do
	echo "Task $taskID begin..." 

	for(( procID = 0; procID < prInTask; procID++))
	do
		((procGb=$procID + $taskID * $prInTask))
		#echo "number is:"$procGb
		procSq[procID]=`echo ./processor$procGb`
	done

	export procs=`echo ${procSq[*]}`
	#echo $procs

    /usr/sw-mpp/bin/bsub  -J setProBC-$taskID-pro$procGb -q q_x86_share  -n 1 -o log.setProBC-$taskID-pro$procGb -appplugin ./setProcBoundary.sh

done

(( taskID = $maxTask-1 ))
echo $taskID
#bsub the last job
if [ $lastTask == 0 ]
then
	echo "Last task begin..."

    for(( procID = 0; procID < prInTask; procID++))
	do
      ((procGb=$procID + $taskID * $prInTask))
		#echo "number is:"$procGb
		procSq[procID]=`echo ./processor$procGb`
	done

	export procs=`echo ${procSq[*]}`
	#echo $procs

    /usr/sw-mpp/bin/bsub -I  -J setProBC-$taskID-pro$procGb -q q_x86_share -n 1  -o log.setProBC-$taskID-pro$procGb -appplugin ./setProcBoundary.sh

	echo "Set process boundary finished, please check the job log!"
else
	
	echo "Task $taskID begin..."

    for(( procID = 0; procID < prInTask; procID++))
	do
      ((procGb=$procID + $taskID * $prInTask))
		#echo "number is:"$procGb
		procSq[procID]=`echo ./processor$procGb`
	done

	export procs=`echo ${procSq[*]}`
	#echo $procs

    /usr/sw-mpp/bin/bsub  -J setProBC-$taskID-pro$procGb -q q_x86_share -n 1  -o log.setProBC-$taskID-pro$procGb -appplugin ./setProcBoundary.sh

    echo "Last task begin..."

	for(( procID = 0; procID < lastTask; procID++))
	do
		((procGb= $procID + ($taskID + 1 ) * $prInTask ))
		#echo "number is:"$procGb
		procSqLaT[procID]=`echo ./processor$procGb`
	done

	export procs=`echo ${procSqLaT[*]}`
	#echo $procs
	
	/usr/sw-mpp/bin/bsub  -I  -J setProBC-last-pro$procGb -q q_x86_share -n 1  -o log.setProBC-last-pro$procGb -appplugin ./setProcBoundary.sh
	
	echo "Set process boundary finished, please check the job log!"
fi


